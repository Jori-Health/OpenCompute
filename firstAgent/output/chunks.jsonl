{"id": "ce5be824f0d1e21f6d2954a409035e39da5b613f", "doc_id": "2e186bb2ad1f9beaa5de8a9c791b2ed4f079dc98", "ordinal": 1, "text": "Python Programming Guide Python is a versatile programming language used for web development, data science, and automation. Key features include: - Simple syntax - Large standard library - Cross-platform compatibility Popular frameworks include Django, Flask, and FastAPI for web development.", "source_path": "data/sample_docs/quickstart1.txt", "page": null, "line_start": null, "line_end": null}
{"id": "283690169e4726d6c15c3e8d717ea4158fb845eb", "doc_id": "b11467442cfe49b4361f6bf67f6db96fa6c7f579", "ordinal": 1, "text": "Machine Learning Overview Machine Learning (ML) enables computers to learn patterns from data without explicit programming. Types of ML: - Supervised Learning: Uses labeled training data - Unsupervised Learning: Finds hidden patterns - Reinforcement Learning: Learns through trial and error Common algorithms include Linear Regression, Decision Trees, and Neural Networks.", "source_path": "data/sample_docs/quickstart2.txt", "page": null, "line_start": null, "line_end": null}
{"id": "948cd8387341be3f96c65a24667ae7cb3348fb6e", "doc_id": "79487dbf106f671aa666f678fa2ac537523c6846", "ordinal": 1, "text": "Introduction to Machine Learning Machine Learning (ML) is a subset of artificial intelligence (AI) that focuses on algorithms and statistical models. These systems can learn and improve from experience without being explicitly programmed. Key Concepts: - Supervised Learning: Learning with labeled training data - Unsupervised Learning: Finding patterns in data without labels - Reinforcement Learning: Learning through interaction with an environment Popular ML algorithms include: - Linear Regression - Decision Trees - Neural Networks - Support Vector Machines (SVM) - Random Forest Applications of ML span across various industries including healthcare, finance, transportation, and entertainment. Companies like Google, Amazon, and Microsoft heavily invest in ML research and development. The field continues to evolve rapidly with advances in deep learning, natural language processing (NLP), and computer vision technologies.", "source_path": "data/sample_docs/sample1.txt", "page": null, "line_start": null, "line_end": null}
{"id": "aced85d35db95b6d7f5db351e2e2a1ab7a339547", "doc_id": "1005c3f950f389f2712d35fc95576710479cc092", "ordinal": 1, "text": "Python Programming Best Practices Python is a high-level programming language known for its simplicity and readability. When writing Python code, following best practices ensures maintainable and efficient applications. Code Style Guidelines: - Follow PEP 8 style guide - Use meaningful variable names - Keep functions small and focused - Write comprehensive docstrings - Use type hints for better code documentation Error Handling: - Use try-except blocks appropriately - Log errors with meaningful messages - Handle specific exceptions rather than catching all - Use context managers (with statements) for resource management Testing: - Write unit tests for all functions - Use pytest framework for testing - Aim for high test coverage - Test edge cases and error conditions Performance Considerations: - Use list comprehensions for simple transformations - Leverage built-in functions and libraries - Profile code to identify bottlenecks - Consider using NumPy for numerical computations Documentation: - Write clear README files - Include examples in docstrings - Use Sphinx for API documentation - Keep documentation up to date", "source_path": "data/sample_docs/sample2.txt", "page": null, "line_start": null, "line_end": null}
